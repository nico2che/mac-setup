# Decide if we set pro or perso apps in dock
# Pro apps are by default
- name: Get perso apps
  set_fact:
    dock_apps: "{{ dock_applications.perso }}"
  when: perso | default('no') | bool

- name: Get pro apps
  set_fact:
    dock_apps: "{{ dock_applications.pro }}"
  when: pro | default('no') | bool

- name: Ensure required tools
  homebrew:
    name: dockutil
    state: latest

- name: Get apps currently in Dock
  shell: "dockutil --list | grep 'persistent-apps' | cut -d$'\t' -f1"
  register: dock_current_apps
  changed_when: false
  check_mode: no

- debug: msg={{ dock_current_apps.stdout_lines }}
- debug: msg={{ dock_apps }}
- debug: msg={{ dock_apps|map(attribute='name') }}
- debug: msg={{ dock_apps|map(attribute='name')|list }}
- debug: msg={{ dock_current_apps.stdout_lines|difference(dock_apps|map(attribute='name')|list) }}

- name: azd
  set_fact:
    dock_undefined_items: "{{ dock_current_apps.stdout_lines|difference(dock_apps|map(attribute='name')|list) }}"

- name: Remove undefined items
  shell: "dockutil --remove '{{ item }}' --no-restart"
  with_items: "{{ dock_undefined_items }}"
  notify: Restart Dock

- name: Add items
  shell: "dockutil --add '{{ item.1.path }}' --label '{{ item.1.name }}' --no-restart"
  with_indexed_items: "{{ dock_apps }}"
  when: dock_current_apps.stdout.find(item.1.name) == -1
  notify: Restart Dock

- name: Refresh apps currently in Dock
  shell: "dockutil --list | grep 'persistent-apps' | cut -d$'\t' -f1"
  register: dock_current_apps
  changed_when: false
  check_mode: no

- name: Ensure app order
  shell: dockutil --move '{{ item.1.name }}' --position {{ item.0 | int + 1 }} --no-restart
  with_indexed_items: "{{ dock_apps }}"
  when: dock_current_apps.stdout_lines[item.0].find(item.1.name) == -1
  notify: Restart Dock
